<!DOCTYPE html>
<html lang="en">
<head>
<meta charset="UTF-8">
<meta name="viewport" content= "width=device-width, initial-scale=0.85,maximum-scale=0.85" />
 <title>五子棋</title>
 <style type="text/css">
  canvas{
  margin: 10px auto;
  box-shadow: -2px -2px 2px #F3F2F2, 5px 5px 5px #6F6767;
  }
  input{
  display: run-in;
  box-shadow: -2px -2px 2px #F3F2F2, 5px 5px 5px #6F6767;
  }
 </style>
</head>
<body>
<form name="frm">
 <canvas id="mycanvas" width="450px" height="450px"></canvas>
</p>
<input type="button" value="悔棋" onclick="onback()" /> <input type="button" value="重开" onclick="ongiveup()" /> <input type="text" id="values" value="黑白形势:" style="width:260px" />
<input type="hidden" id="level" value={{.Level}} />
<input type="hidden" id="color" value={{.Color}} />
<input type="hidden" id="forbid" value={{.Forbid}} />
</form>
 <script type="text/javascript">
// box-shadow: -2px -2px 2px #F3F2F2, 5px 5px 5px #6F6767;
  var chess = document.getElementById("mycanvas");
  var isOver=0;
  var context = chess.getContext('2d');
  var step=0;
  var remoteid="";
  var myturn=0;
  var stx=new Array(255);
  var sty=new Array(255);
  var bvals=new Array(255);
  var wvals=new Array(255);
  var chessBox = [];//用于存放棋盘中落子的情况
  var level=frm.level.value;
  var color=frm.color.value; //human
  var forbid=frm.forbid.value;

  for(var i=0;i<15;i++){
   chessBox[i]=[];
   for(var j=0;j<15;j++){
    chessBox[i][j]=0;//初始值为0
   }
  }
  function drawChessBoard(){
//	context.clearRect(0,0,450,450);
//	context.height=context.height;
	context.fillStyle='#ca8622';
	//context.fillStyle='#999900';
	context.fillRect(0,0,450,450);
	context.beginPath();
   for(var i=0;i<15;i++){
    context.strokeStyle="#D6D1D1";
    context.moveTo(15+i*30,15);//垂直方向画15根线，相距30px;
    context.lineTo(15+i*30,435);
    context.stroke();
    context.moveTo(15,15+i*30);//水平方向画15根线，相距30px;棋盘为14*14；
    context.lineTo(435,15+i*30);
    context.stroke();
   }
	
   	context.fillStyle="#000027";
   	context.beginPath();
   	context.arc(15+7*30,15+7*30,3,0,2*Math.PI);//绘制棋子
   	context.fill();
   	context.closePath();
  }

  drawChessBoard();//绘制棋盘
  if (color=="black"){
		getNext();
	}
	myturn=1;

function doOver(){
context.font = "24px bold 宋体";
// 设置颜色
context.fillStyle = "#0000ff";
// 设置水平对齐方式
context.textAlign = "center";
// 设置垂直对齐方式
context.textBaseline = "top";
context.moveTo(1,1);
// 绘制文字（参数：要写的字，x坐标，y坐标）
	if(isOver==1){
		context.fillText("胜负已分，黑棋胜", 225, 20);
	}else if(isOver==2){
		context.fillText("胜负已分，白棋胜", 225, 20);
	}else if(isOver==-1){
		context.fillText("居然和棋了...", 225, 20);
	}else if(isOver==-2){
		cr="白棋";
		if(color=="white")
			cr="黑棋";
		context.fillText(cr+"走投无路,投降了!", 225, 20);
	}

}

function getNext(){
	myturn=0;
	var x,y;
	if(step==0){
		x=7;
		y=7;
		oneStep(x,y);
		myturn=1;
	}else{
		var xmlhttp;
		var ul="/PostStep"
		xmlhttp=new XMLHttpRequest();
		if(!xmlhttp){
			alert("xmlhttp create error");
			return ;
		}
  		if(xmlhttp.overrideMimeType) {  
            xmlhttp.overrideMimeType("text/html");  
        }  
		xmlhttp.responseType="text";
		xmlhttp.open("POST",ul);
		xmlhttp.setRequestHeader("Content-Type","application/json"); 
		var sts="";
		var i;
		for (i=0;i<step;i++){
			if(i>0)
				sts+=";";
			sts+=(stx[i]+","+sty[i]);
		}
		xmlhttp.onreadystatechange=function (e){
			if(xmlhttp.readyState==4 && xmlhttp.status==200){
				var jtxt=xmlhttp.responseText;
				var jobj=JSON.parse(jtxt);
				bvals[step-1]=jobj.BVal;
				wvals[step-1]=jobj.WVal;
				frm.values.value="黑白形势: "+jobj.BVal+"-"+jobj.WVal;
				isOver=Number(jobj.IsOver)
				if (isOver){
					doOver();
					return
				}
				xhr=new XMLHttpRequest();
		        if(xhr.overrideMimeType) {  
				xhr.overrideMimeType("text/html");  
        		}  
        		xhr.responseType="text";
				xhr.open("GET","/GetFromID?id="+jobj.Id);
				xhr.timeout=180000;
				xhr.onreadystatechange=function(c){
				if(xhr.readyState==4 && xhr.status==200){
					var ret=xhr.responseText;
					var robj=JSON.parse(ret);
					oneStep(Number(robj.X),Number(robj.Y));
					bvals[step-1]=robj.BVal;
					wvals[step-1]=robj.WVal;
					frm.values.value="黑白形势: "+robj.BVal+"-"+robj.WVal;
					isOver=Number(robj.IsOver);
					if(isOver){
						doOver();
						return;
					}
					myturn=1;
					}	
				}
				xhr.send();
			}
		}
    	xmlhttp.onload = function(e){
//        	console.log('httpPostTest onload。e====>' + JSON.stringify(e));
    	}
		xmlhttp.send(JSON.stringify({
				"Level" : Number(level),
				"Forbid" : Number(forbid),
				"Num" : step,
				"Steps" : sts
		}));
	}
}

function drawChess(i,j,fakestep){
   context.beginPath();
   context.arc(15+i*30,15+j*30,13,0,2*Math.PI);//绘制棋子
   context.closePath();
   var g=context.createRadialGradient(15+i*30,15+j*30,13,15+i*30,15+j*30,0);//设置渐变
   if(fakestep%2==0){       //黑棋，否则是白棋
    g.addColorStop(0,'#0A0A0A');//黑棋
    g.addColorStop(1,'#636766');
     chessBox[i][j]=1;
   }else {
    g.addColorStop(0,'#D1D1D1');//白棋
    g.addColorStop(1,'#F9F9F9');
     chessBox[i][j]=2;
   }
   context.fillStyle=g;
   context.fill();
}

function impress(i,j){
    context.fillStyle="#800000";
    context.beginPath();
    context.arc(15+i*30,15+j*30,3,0,2*Math.PI);
    context.fill();
    context.closePath();
}

function oneStep(i,j){
	if(step>0){
		drawChess(stx[step-1],sty[step-1],step-1);
	}
	drawChess(i,j,step);
	impress(i,j);
   stx[step]=i;
   sty[step]=j;
	step++;
 }

document.oncontextmenu = function(){return false;}     //禁止鼠标右键菜单显示

//document.body.onmouseup = function(e){     //在body里点击触发事件
chess.onmouseup = function(e){     //在body里点击触发事件
	if(myturn==0) return ;

//     var res = document.getElementById('mycanvas');      //找到id为box的div
       if(e.button==0 || e.button==1){    
	
	if (isOver!=0) return;
   var x = e.offsetX;//相对于棋盘左上角的x坐标
   var y = e.offsetY;//相对于棋盘左上角的y坐标
   var i = Math.floor(x/30);
   var j = Math.floor(y/30);
   if( chessBox[i][j] != 0 )
	return ;
    oneStep(i,j);
	getNext();
	if(isOver!=0){
		return ;
	}
  }else if(e.button==2){
		onback();
	}
}
	
function onback(){
		if(!myturn) return ;
		if(step>1){
			chessBox[stx[step-1]][sty[step-1]]=0;
			chessBox[stx[step-2]][sty[step-2]]=0;
			step-=2;
			redraw();
		}

}

function ongiveup(){
/*	if (myturn){
		isOver=-2;
		doOver();
		myturn=0;
	}*/
	location.reload(true);
}

function redraw(){
	drawChessBoard();
	var i;
	for(i=0;i<step;i++){
	   context.beginPath();
   context.arc(15+stx[i]*30,15+sty[i]*30,13,0,2*Math.PI);//绘制棋子
   context.closePath();
   var g=context.createRadialGradient(15+stx[i]*30,15+sty[i]*30,13,15+stx[i]*30,15+sty[i]*30,0);//设置渐变
   if(i%2==0){       //黑棋，否则是白棋
    g.addColorStop(0,'#0A0A0A');//黑棋
    g.addColorStop(1,'#636766');
   }else {
    g.addColorStop(0,'#D1D1D1');//白棋
    g.addColorStop(1,'#F9F9F9');
   }
   context.fillStyle=g;
   context.fill();
	}
	if (step>0){
		impress(stx[step-1],sty[step-1]);
		frm.values.value="黑白形势: "+bvals[step-1]+"-"+wvals[step-1];
	}else{
		frm.values.value="黑白形势:";
	}

}
 </script>
</body>
</html>
